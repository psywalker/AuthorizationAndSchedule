{"version":3,"sources":["components/Authorization/styled.js","components/Authorization/index.js","constants/index.js","components/Graph/index.js","components/Header/styled.js","components/Header/index.js","styled.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","Authorization","memo","handleAuthorization","useState","login","setLogin","password","setPassword","isSubmitDisabled","setIsSubmitDisabled","classes","sendRequest","url","a","fetch","method","headers","body","JSON","stringify","response","json","useEffect","pass","length","Container","component","maxWidth","CssBaseline","className","Avatar","Typography","variant","noValidate","TextField","required","fullWidth","id","label","name","autoFocus","helperText","onChange","event","target","value","type","autoComplete","Button","color","onClick","preventDefault","then","token","localStorage","setItem","catch","err","console","log","disabled","Graph","data","dataChart","list","series","map","item","title","d","options","xaxis","categories","text","align","getDataForLineChart","Number","views","labels","chart","responsive","breakpoint","legend","position","getDataForDonutChart","header","alignSelf","background","transition","fontSize","letterSpacing","outline","boxShadow","borderRadius","marginBottom","marginLeft","button","borderColor","Header","handleLogOut","Grid","container","wrap","justify","alt","src","Box","startIcon","flexWrap","padding","item1","height","justifyContent","item2","App","lineGraphData","setLineGraphData","donutGraphData","setDonutGraphData","isAuthorization","setIsAuthorization","loadingGpaph","setLoadingGpaph","loadingDonut","setLoadingDonut","getItem","resolve","clear","loading","size","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.82eed723.chunk.js","sourcesContent":["import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', \r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));","import React, { useState, useEffect, memo } from \"react\";\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport { \r\n  Container, \r\n  Typography,\r\n  TextField, \r\n  CssBaseline, \r\n  Button, \r\n  Avatar \r\n} from '@material-ui/core';\r\nimport { INITIAL_PASSWORD, LOGIN_URL } from '../../constants'\r\nimport { useStyles } from './styled'\r\n\r\nexport const Authorization = memo(({ handleAuthorization }) => {\r\n\tconst [login, setLogin] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\tconst [isSubmitDisabled, setIsSubmitDisabled] = useState(true);\r\n  const classes = useStyles();\r\n\r\n\tconst formValidation = (log, pass) => !(log.length >= 3 && pass.length >= 5)\r\n\t\r\n  const sendRequest = async (url, login, password) => {\r\n    const response = await fetch(url, {\r\n      method: 'POST',\r\n      headers: {\r\n        \"Content-type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify({\r\n\t\t\t\tlogin,\r\n\t\t\t\tpassword\r\n\t\t\t}),\r\n    });\r\n    return response.json();\r\n  };\r\n\tconst handleLogin = (event) => {\r\n\t\tevent.preventDefault()\r\n\t\tsendRequest(LOGIN_URL, INITIAL_PASSWORD).then(({ login, token }) => {\r\n      if (login && token) { \r\n        localStorage.setItem('login', login);\r\n        localStorage.setItem('token', token);\r\n        handleAuthorization(login) \r\n      }\r\n\t\t}).catch(err => console.log(err))\r\n  }\r\n\r\n  useEffect(() => {\r\n\t\tsetIsSubmitDisabled(formValidation(login, password))\r\n  }, [login, password]);\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign in\r\n        </Typography>\r\n        <form className={classes.form} noValidate>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"login\"\r\n            label=\"Login\"\r\n            name=\"login\"\r\n            autoFocus\r\n\t\t\t\t\t\thelperText=\"Three or more characters\"\r\n\t\t\t\t\t\tonChange={(event) => setLogin(event.target.value)}\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            autoComplete=\"current-password\"\r\n\t\t\t\t\t\thelperText=\"Fife or more characters\"\r\n\t\t\t\t\t\tonChange={(event) => setPassword(event.target.value)}\r\n          />\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n\t\t\t\t\t\tonClick={handleLogin}\r\n\t\t\t\t\t\tdisabled={isSubmitDisabled}\r\n          >\r\n            Sign In\r\n          </Button>\r\n        </form>\r\n      </div>\r\n    </Container>\r\n )\r\n})","export const INITIAL_LOGIN = 'psywalker';\r\nexport const INITIAL_PASSWORD = '123456'\r\nexport const LOGIN_URL = 'http://ideadeploy.space/test/login.json'\r\nexport const LINE_GRAPH_URL = 'http://ideadeploy.space/test/graph.json'\r\nexport const DONUT_GRAPH_URL = 'http://ideadeploy.space/test/donut.json'","import React, { memo } from \"react\";\r\nimport Chart from \"react-apexcharts\";\r\n\r\nconst getDataForDonutChart = ({ list }) => ({    \r\n    series: [...list.map(item => Number(item.views))],\r\n    options: {\r\n      labels: [...list.map(item => item.title)],\r\n      title: {\r\n        text: 'Data for a donut graph',\r\n        align: 'center'\r\n      },\r\n      chart: {\r\n        type: 'donut',\r\n      },\r\n      responsive: [{\r\n        breakpoint: 480,\r\n        options: {\r\n          chart: {\r\n            width: 200\r\n          },\r\n          legend: {\r\n            position: 'bottom'\r\n          }\r\n        }\r\n      }]\r\n    },\r\n  });\r\n\r\nconst getDataForLineChart = ({ list }) => ({\r\n  series: list.map(item => ({\r\n    name: item.title,\r\n    data: item.data.map(d => d[1])\r\n  })),\r\n  options: {\r\n    xaxis: {\r\n      categories: list[0].data.map(item => item[0]),\r\n    },\r\n    title: {\r\n      text: 'Data for a line graph',\r\n      align: 'center'\r\n    }\r\n  }\r\n})\r\n\r\nexport const Graph = memo(({ type, data }) => {\r\n  let dataChart = {}\r\n  if (type === 'line') dataChart = getDataForLineChart(data)\r\n  if (type === 'donut') dataChart = getDataForDonutChart(data)\r\n  const { options, series } = dataChart;\r\n\r\n  return (\r\n    <Chart\r\n      options={options}\r\n      series={series}\r\n      type={type}\r\n      width=\"500\"\r\n    />\r\n  )\r\n})","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport const useStyles = makeStyles(() => ({\r\n  header: {\r\n    alignSelf: 'center',\r\n    background: 'transparent',\r\n    transition: 'all 0.5s ease',\r\n    color: '#41403E',\r\n    fontSize: '2rem',\r\n    letterSpacing: '1px',\r\n    outline: 'none',\r\n    boxShadow: '20px 38px 34px -26px rgb(0 0 0 / 20%)',\r\n    borderRadius: '255px 15px 225px 15px/15px 225px 15px 255px',\r\n    marginBottom: '20px'\r\n  },\r\n  login: {\r\n    color: '#fff',\r\n    marginLeft: '20px'\r\n  },\r\n  button: {\r\n    color: '#fff',\r\n    borderColor: \"#fff\"\r\n  }\r\n}));\r\n","import React, { memo } from \"react\";\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport { Box, Grid, Button, Avatar } from '@material-ui/core';\r\nimport { useStyles } from './styled'\r\n\r\nexport const Header = memo(({ handleLogOut, login }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid \r\n      className={classes.header} \r\n      container wrap=\"nowrap\" \r\n      justify=\"space-between\"  \r\n      alignItems=\"center\"\r\n    >\r\n      <Grid container wrap=\"nowrap\" alignItems=\"center\">\r\n        <Avatar alt=\"Remy Sharp\" src=\"https://material-ui.com/static/images/avatar/1.jpg\" />\r\n        <Box component=\"span\" className={classes.login}>\r\n          {login}\r\n        </Box>\r\n      </Grid>\r\n      <Grid container item justify=\"flex-end\">\r\n        <Button variant=\"outlined\" color=\"primary\"  className={classes.button} startIcon={<ExitToAppIcon />} onClick={handleLogOut}>\r\n          Log Out\r\n        </Button>\r\n      </Grid>\r\n  </Grid>\r\n )\r\n})","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport const useStyles = makeStyles(() => ({\r\n  container: {\r\n    flexWrap: 'wrap',\r\n    backgroundColor: '#333',\r\n    borderRadius: '4px',\r\n    padding: '15px 20px 0',\r\n    margin: '20px auto'\r\n  },\r\n  item1: {\r\n    margin: '0 0 20px',\r\n    width: '100%',\r\n    height: '350px',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    borderRadius: '4px',\r\n    boxShadow: '0px 2px 1px -1px rgb(0 0 0 / 20%), 0px 1px 1px 0px rgb(0 0 0 / 14%), 0px 1px 3px 0px rgb(0 0 0 / 12%)',\r\n    background: '#fff',\r\n  },\r\n  item2: {\r\n    width: '100%',\r\n    height: '430px',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    borderRadius: '4px',\r\n    boxShadow: '0px 2px 1px -1px rgb(0 0 0 / 20%), 0px 1px 1px 0px rgb(0 0 0 / 14%), 0px 1px 3px 0px rgb(0 0 0 / 12%)',\r\n    background: '#fff',\r\n    marginBottom: '20px'\r\n  }\r\n}));","import React, { useState, useEffect, memo } from \"react\";\nimport { Authorization } from \"./components/Authorization\";\nimport { Graph } from \"./components/Graph\";\nimport { Header } from \"./components/Header\";\nimport { LINE_GRAPH_URL, DONUT_GRAPH_URL } from './constants'\nimport { Grid, Container } from '@material-ui/core';\nimport MoonLoader from \"react-spinners/MoonLoader\";\nimport { useStyles } from './styled'\n\nexport const App = memo(() => {\n  const [lineGraphData, setLineGraphData] = useState(null);\n  const [donutGraphData, setDonutGraphData] = useState(null);\n  const [login, setLogin] = useState('');\n  const [isAuthorization, setIsAuthorization] = useState(false);\n  const [loadingGpaph, setLoadingGpaph] = useState(false);\n  const [loadingDonut, setLoadingDonut] = useState(false);\n  const classes = useStyles();\n\n  const sendRequest = async (url) => {\n    const response = await fetch(url, {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\"\n      }\n    });\n    return response.json();\n  };\n\n  const handleAuthorization = (log) => {\n    setLogin(log)\n    setIsAuthorization(true)\n  }\n  const handleLogOut = () => {\n    localStorage.clear()\n    setIsAuthorization(false)\n  }\n\n  useEffect(() => {\n    const login = localStorage.getItem('login');\n    if (login) { \n      setLogin(login)\n      setIsAuthorization(true)\n      setLoadingGpaph(true)\n      setLoadingDonut(true);\n      sendRequest(LINE_GRAPH_URL).then(resolve => {\n        setLineGraphData(resolve)\n        setLoadingGpaph(false)\n      }).catch(err => console.log(err))\n\n      sendRequest(DONUT_GRAPH_URL).then(resolve => {\n        setDonutGraphData(resolve)\n        setLoadingDonut(false)\n      }).catch(err => console.log(err))\n    }\n  }, []);\n\n  if (!isAuthorization) return <Authorization handleAuthorization={handleAuthorization} />\n  return (\n    <Container maxWidth=\"sm\" className={classes.container}>\n      <Header handleLogOut={handleLogOut} login={login} />\n      <Grid container>\n        <Grid item className={classes.item1}>\n          <MoonLoader loading={loadingGpaph} size={50} />\n          { lineGraphData && <Graph type=\"line\" data={lineGraphData} />}\n        </Grid>\n        <Grid item className={classes.item2}>\n          <MoonLoader loading={loadingDonut} size={50} />\n          { donutGraphData && <Graph type=\"donut\" data={donutGraphData} /> }\n        </Grid>\n      </Grid>\n    </Container>\n  );\n})\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}